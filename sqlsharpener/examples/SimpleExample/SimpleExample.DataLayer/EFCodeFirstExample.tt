<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="$(SolutionDir)\packages\SqlSharpener.1.0.10\tools\SqlSharpener.dll" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="SqlSharpener" #>
<#@ output extension=".cs" #>
<#
	// Ensure the SqlSharpener version number above matches the version you installed!

	// Create a new MetaBuilder
	var meta = new MetaBuilder();

	// Specify paths to your *.sql files. Remember to include your tables as well! We need them to get the data types.
	meta.SqlPaths.Add(Host.ResolvePath(@"..\SimpleExample.Database\dbo\Tables"));
	meta.SqlPaths.Add(Host.ResolvePath(@"..\SimpleExample.Database\dbo\Stored Procedures"));
#>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity;

namespace SimpleExample.EntityFrameworkCodeFirst
{
	public partial class TaskContext : DbContext
	{
		public TaskContext(): base()
		{
		}
<# foreach(var tbl in meta.Tables){ #>
		public DbSet<<#=tbl.Name#>> <#=tbl.Name#> { get; set; }
<# } #>
	}

<# foreach(var tbl in meta.Tables){ #>

	[Table("<#=tbl.Name#>")]
	public partial class <#=tbl.Name#>
	{
<# foreach(var col in tbl.Columns){ #>

<# if(col.IsPrimaryKey) { WriteLine("		[Key]"); } #>
<# if(!col.IsNullable) { WriteLine("		[Required]"); } #>
<# if(col.Length > 0) { WriteLine("		[MaxLength({0})]", col.Length); } #>
<# if(col.IsIdentity) { WriteLine("		[DatabaseGenerated(DatabaseGeneratedOption.Identity)]"); } #>
		public <#=col.DataTypes[TypeFormat.DotNetFrameworkType]#> <#=col.Name#> { get; set; }
<# foreach( var parent in col.ParentRelationships){ #>
		[ForeignKey("<#=parent.Columns.First()#>")]
		public virtual <#=parent.TableOrView#> <#=parent.TableOrView#> { get; set; }
<# } #>
<# foreach( var child in col.ChildRelationships){ #>
		public virtual ICollection<<#=child.TableOrView#>> <#=child.TableOrView#> { get; set; }
<# }} #>
	}
<# } #>
}